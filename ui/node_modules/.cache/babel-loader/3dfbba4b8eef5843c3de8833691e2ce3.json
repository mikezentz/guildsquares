{"ast":null,"code":"import _slicedToArray from \"/Users/anthony/Documents/projects/guildsquares/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/anthony/Documents/projects/guildsquares/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/anthony/Documents/projects/guildsquares/ui/src/pages/LandingPage.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    height: 100vh;\\n    width: 100vw;\\n    background: linear-gradient(135deg, rgb(32, 186, 230),rgb(110, 6, 173));\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useGlobal, useEffect, useState } from 'reactn';\nimport Gallery from '../components/Gallery';\nimport client from '../api/client';\nimport styled from 'styled-components';\nconst Body = styled.div(_templateObject());\n\nconst LandingPage = () => {\n  const _useGlobal = useGlobal('images'),\n        setImages = _useGlobal[1];\n\n  const _useState = useState(\"countdown\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        countdown = _useState2[0],\n        setCountdown = _useState2[1];\n\n  const getImages = async () => {\n    const _ref = await client.get('/'),\n          data = _ref.data;\n\n    setImages(data);\n  };\n\n  const timer = () => {\n    setCountdown(countdown - 1);\n    console.log(countdown);\n\n    if (countdown === 0) {\n      setCountdown(30); // getImages()\n    }\n  };\n\n  useEffect(() => {\n    setCountdown(30);\n    setInterval(timer, 1000);\n  }, []);\n  return React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Gallery, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default LandingPage;","map":{"version":3,"sources":["/Users/anthony/Documents/projects/guildsquares/ui/src/pages/LandingPage.jsx"],"names":["React","useGlobal","useEffect","useState","Gallery","client","styled","Body","div","LandingPage","setImages","countdown","setCountdown","getImages","get","data","timer","console","log","setInterval"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,QAApD;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAV,mBAAV;;AAMA,MAAMC,WAAW,GAAG,MAAM;AAAA,qBAEIR,SAAS,CAAC,QAAD,CAFb;AAAA,QAEVS,SAFU,cAEb,CAFa;;AAAA,oBAGcP,QAAQ,CAAC,WAAD,CAHtB;AAAA;AAAA,QAGdQ,SAHc;AAAA,QAGHC,YAHG;;AAKtB,QAAMC,SAAS,GAAG,YAAY;AAAA,iBACT,MAAMR,MAAM,CAACS,GAAP,CAAW,GAAX,CADG;AAAA,UAClBC,IADkB,QAClBA,IADkB;;AAG1BL,IAAAA,SAAS,CAACK,IAAD,CAAT;AACH,GAJD;;AAMA,QAAMC,KAAK,GAAG,MAAM;AAChBJ,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;;AACA,QAAGA,SAAS,KAAK,CAAjB,EAAoB;AAChBC,MAAAA,YAAY,CAAC,EAAD,CAAZ,CADgB,CAEhB;AACH;AACJ,GAPD;;AASAV,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAO,IAAAA,WAAW,CAACH,KAAD,EAAQ,IAAR,CAAX;AACD,GAHM,EAGJ,EAHI,CAAT;AAKA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CA9BD;;AAgCA,eAAeP,WAAf","sourcesContent":["import React, {useGlobal, useEffect, useState} from 'reactn'\nimport Gallery from '../components/Gallery'\nimport client from '../api/client'\nimport styled from 'styled-components'\n\nconst Body = styled.div`\n    height: 100vh;\n    width: 100vw;\n    background: linear-gradient(135deg, rgb(32, 186, 230),rgb(110, 6, 173));\n`\n\nconst LandingPage = () => {\n\n    const  { 1: setImages } = useGlobal('images')\n    const [ countdown, setCountdown ] = useState(\"countdown\")\n\n    const getImages = async () => {\n        const { data } = await client.get('/')\n\n        setImages(data)\n    }\n\n    const timer = () => {\n        setCountdown(countdown - 1)\n        console.log(countdown)\n        if(countdown === 0) {\n            setCountdown(30)\n            // getImages()\n        }\n    }\n\n    useEffect(() => {\n        setCountdown(30)\n        setInterval(timer, 1000)\n      }, [])\n\n    return (\n        <Body>\n            <Gallery />\n        </Body>\n    )\n}\n\nexport default LandingPage"]},"metadata":{},"sourceType":"module"}